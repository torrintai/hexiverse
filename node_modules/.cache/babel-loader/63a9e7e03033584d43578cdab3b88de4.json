{"ast":null,"code":"import _slicedToArray from\"/home/loar/hexverse/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Fragment,useRef,useState}from\"react\";import{Prompt}from\"react-router-dom\";import Card from\"../UI/Card\";import LoadingSpinner from\"../UI/LoadingSpinner\";import classes from\"./QuoteForm.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteForm=function QuoteForm(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEnteringData=_useState2[0],setIsEnteringData=_useState2[1];var authorInputRef=useRef();var textInputRef=useRef();function submitFormHandler(event){event.preventDefault();var enteredAuthor=authorInputRef.current.value;var enteredText=textInputRef.current.value;// optional: Could validate here\nprops.onAddQuote({author:enteredAuthor,text:enteredText});}var finishedEnteringDataHandler=function finishedEnteringDataHandler(){setIsEnteringData(false);};var formFocusedHandler=function formFocusedHandler(){setIsEnteringData(true);};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Prompt,{when:isEnteringData,message:function message(location){return\"Are you sure you want to leave? All your entered data will be lost\";}}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{onFocus:formFocusedHandler,className:classes.form,onSubmit:submitFormHandler,children:[props.isLoading&&/*#__PURE__*/_jsx(\"div\",{className:classes.loading,children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"author\",children:\"Author\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"author\",ref:authorInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"text\",rows:\"5\",ref:textInputRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{onClick:finishedEnteringDataHandler,className:\"btn\",children:\"Add Quote\"})})]})})]});};export default QuoteForm;","map":{"version":3,"sources":["/home/loar/hexverse/src/components/quotes/QuoteForm.js"],"names":["Fragment","useRef","useState","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","isEnteringData","setIsEnteringData","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","finishedEnteringDataHandler","formFocusedHandler","location","form","isLoading","loading","control","actions"],"mappings":"yGAAA,OAASA,QAAT,CAAmBC,MAAnB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,kBAAvB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,cAA4CN,QAAQ,CAAC,KAAD,CAApD,wCAAOO,cAAP,eAAuBC,iBAAvB,eAEA,GAAMC,CAAAA,cAAc,CAAGV,MAAM,EAA7B,CACA,GAAMW,CAAAA,YAAY,CAAGX,MAAM,EAA3B,CAEA,QAASY,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAChCA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,aAAa,CAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C,CACA,GAAMC,CAAAA,WAAW,CAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC,CAEA;AAEAV,KAAK,CAACY,UAAN,CAAiB,CAAEC,MAAM,CAAEL,aAAV,CAAyBM,IAAI,CAAEH,WAA/B,CAAjB,EACD,CAED,GAAMI,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,EAAM,CACxCb,iBAAiB,CAAC,KAAD,CAAjB,CACD,CAFD,CAIA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/Bd,iBAAiB,CAAC,IAAD,CAAjB,CACD,CAFD,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EACE,IAAI,CAAED,cADR,CAEE,OAAO,CAAE,iBAACgB,QAAD,QACP,oEADO,EAFX,EADF,cAOE,KAAC,IAAD,wBACE,cACE,OAAO,CAAED,kBADX,CAEE,SAAS,CAAElB,OAAO,CAACoB,IAFrB,CAGE,QAAQ,CAAEb,iBAHZ,WAKGL,KAAK,CAACmB,SAAN,eACC,YAAK,SAAS,CAAErB,OAAO,CAACsB,OAAxB,uBACE,KAAC,cAAD,IADF,EANJ,cAWE,aAAK,SAAS,CAAEtB,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,QAAf,oBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAElB,cAApC,EAFF,GAXF,cAeE,aAAK,SAAS,CAAEL,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,iBAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,GAAzB,CAA6B,GAAG,CAAEjB,YAAlC,EAFF,GAfF,cAmBE,YAAK,SAAS,CAAEN,OAAO,CAACwB,OAAxB,uBACE,eAAQ,OAAO,CAAEP,2BAAjB,CAA8C,SAAS,CAAC,KAAxD,uBADF,EAnBF,GADF,EAPF,GADF,CAqCD,CA9DD,CAgEA,cAAehB,CAAAA,SAAf","sourcesContent":["import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEnteringData, setIsEnteringData] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishedEnteringDataHandler = () => {\n    setIsEnteringData(false);\n  }\n\n  const formFocusedHandler = () => {\n    setIsEnteringData(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEnteringData}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishedEnteringDataHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}